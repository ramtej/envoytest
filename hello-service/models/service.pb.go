// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

/*
Package models is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	HelloRequest
	HelloResponse
	GreetingRequest
	GreetingResponse
*/
package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloResponse struct {
	Greeting string `protobuf:"bytes,1,opt,name=greeting" json:"greeting,omitempty"`
}

func (m *HelloResponse) Reset()                    { *m = HelloResponse{} }
func (m *HelloResponse) String() string            { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()               {}
func (*HelloResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloResponse) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

type GreetingRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GreetingRequest) Reset()                    { *m = GreetingRequest{} }
func (m *GreetingRequest) String() string            { return proto.CompactTextString(m) }
func (*GreetingRequest) ProtoMessage()               {}
func (*GreetingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GreetingRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GreetingResponse struct {
	Greeting string `protobuf:"bytes,1,opt,name=greeting" json:"greeting,omitempty"`
}

func (m *GreetingResponse) Reset()                    { *m = GreetingResponse{} }
func (m *GreetingResponse) String() string            { return proto.CompactTextString(m) }
func (*GreetingResponse) ProtoMessage()               {}
func (*GreetingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GreetingResponse) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "models.HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "models.HelloResponse")
	proto.RegisterType((*GreetingRequest)(nil), "models.GreetingRequest")
	proto.RegisterType((*GreetingResponse)(nil), "models.GreetingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for HelloService service

type HelloServiceClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...client.CallOption) (*HelloResponse, error)
	GetGreeting(ctx context.Context, in *GreetingRequest, opts ...client.CallOption) (*GreetingResponse, error)
}

type helloServiceClient struct {
	c           client.Client
	serviceName string
}

func NewHelloServiceClient(serviceName string, c client.Client) HelloServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "models"
	}
	return &helloServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *helloServiceClient) Hello(ctx context.Context, in *HelloRequest, opts ...client.CallOption) (*HelloResponse, error) {
	req := c.c.NewRequest(c.serviceName, "HelloService.Hello", in)
	out := new(HelloResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helloServiceClient) GetGreeting(ctx context.Context, in *GreetingRequest, opts ...client.CallOption) (*GreetingResponse, error) {
	req := c.c.NewRequest(c.serviceName, "HelloService.GetGreeting", in)
	out := new(GreetingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HelloService service

type HelloServiceHandler interface {
	Hello(context.Context, *HelloRequest, *HelloResponse) error
	GetGreeting(context.Context, *GreetingRequest, *GreetingResponse) error
}

func RegisterHelloServiceHandler(s server.Server, hdlr HelloServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&HelloService{hdlr}, opts...))
}

type HelloService struct {
	HelloServiceHandler
}

func (h *HelloService) Hello(ctx context.Context, in *HelloRequest, out *HelloResponse) error {
	return h.HelloServiceHandler.Hello(ctx, in, out)
}

func (h *HelloService) GetGreeting(ctx context.Context, in *GreetingRequest, out *GreetingResponse) error {
	return h.HelloServiceHandler.GetGreeting(ctx, in, out)
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcb, 0xcd, 0x4f, 0x49, 0xcd,
	0x29, 0x96, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc,
	0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0xa8, 0x52, 0x52, 0xe2, 0xe2, 0xf1,
	0x48, 0xcd, 0xc9, 0xc9, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9,
	0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0xb4, 0xb9, 0x78,
	0xa1, 0x6a, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xa4, 0xb8, 0x38, 0xd2, 0x8b, 0x52, 0x53,
	0x4b, 0x32, 0xf3, 0xd2, 0xa1, 0x0a, 0xe1, 0x7c, 0x25, 0x55, 0x2e, 0x7e, 0x77, 0x28, 0x1b, 0x9f,
	0x99, 0x7a, 0x5c, 0x02, 0x08, 0x65, 0x84, 0x8d, 0x35, 0x3a, 0xca, 0x08, 0x75, 0x68, 0x30, 0xc4,
	0x93, 0x42, 0x41, 0x5c, 0xac, 0x60, 0xbe, 0x90, 0x88, 0x1e, 0xc4, 0xa3, 0x7a, 0xc8, 0xfe, 0x90,
	0x12, 0x45, 0x13, 0x85, 0x58, 0xa1, 0x24, 0xd3, 0x74, 0xf9, 0xc9, 0x64, 0x26, 0x31, 0x21, 0x11,
	0x70, 0x70, 0x94, 0x19, 0xea, 0x67, 0x80, 0xa4, 0xf5, 0xab, 0x41, 0x6e, 0xaa, 0x15, 0x4a, 0xe4,
	0xe2, 0x76, 0x4f, 0x2d, 0x81, 0xb9, 0x4b, 0x48, 0x1c, 0x66, 0x06, 0x9a, 0x87, 0xa4, 0x24, 0x30,
	0x25, 0xa0, 0xe6, 0xcb, 0x83, 0xcd, 0x97, 0x14, 0x12, 0x87, 0x99, 0x0f, 0xf3, 0x00, 0xd4, 0x8a,
	0x24, 0x36, 0x70, 0xb0, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x01, 0x27, 0xad, 0xad,
	0x01, 0x00, 0x00,
}
